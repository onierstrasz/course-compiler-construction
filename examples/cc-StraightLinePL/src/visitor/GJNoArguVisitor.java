//
// Generated by JTB 1.3.2
//

package visitor;
import syntaxtree.*;
import java.util.*;

/**
 * All GJ visitors with no argument must implement this interface.
 */

public interface GJNoArguVisitor<R> {

   //
   // GJ Auto class visitors with no argument
   //

   public R visit(NodeList n);
   public R visit(NodeListOptional n);
   public R visit(NodeOptional n);
   public R visit(NodeSequence n);
   public R visit(NodeToken n);

   //
   // User-generated visitor methods below
   //

   /**
    * f0 -> StmList()
    * f1 -> <EOF>
    */
   public R visit(Goal n);

   /**
    * f0 -> Stm()
    * f1 -> ( ";" Stm() )*
    */
   public R visit(StmList n);

   /**
    * f0 -> Assignment()
    *       | PrintStm()
    */
   public R visit(Stm n);

   /**
    * f0 -> WriteId()
    * f1 -> ":="
    * f2 -> Exp()
    */
   public R visit(Assignment n);

   /**
    * f0 -> <IDENTIFIER>
    */
   public R visit(WriteId n);

   /**
    * f0 -> "print"
    * f1 -> "("
    * f2 -> ExpList()
    * f3 -> ")"
    */
   public R visit(PrintStm n);

   /**
    * f0 -> Exp()
    * f1 -> ( AppendExp() )*
    */
   public R visit(ExpList n);

   /**
    * f0 -> ","
    * f1 -> Exp()
    */
   public R visit(AppendExp n);

   /**
    * f0 -> MulExp()
    * f1 -> ( PlusOp() | MinOp() )*
    */
   public R visit(Exp n);

   /**
    * f0 -> "+"
    * f1 -> MulExp()
    */
   public R visit(PlusOp n);

   /**
    * f0 -> "-"
    * f1 -> MulExp()
    */
   public R visit(MinOp n);

   /**
    * f0 -> PrimExp()
    * f1 -> ( MulOp() | DivOp() )*
    */
   public R visit(MulExp n);

   /**
    * f0 -> "*"
    * f1 -> PrimExp()
    */
   public R visit(MulOp n);

   /**
    * f0 -> "/"
    * f1 -> PrimExp()
    */
   public R visit(DivOp n);

   /**
    * f0 -> ReadId()
    *       | Num()
    *       | StmExp()
    */
   public R visit(PrimExp n);

   /**
    * f0 -> <IDENTIFIER>
    */
   public R visit(ReadId n);

   /**
    * f0 -> <INTEGER_LITERAL>
    */
   public R visit(Num n);

   /**
    * f0 -> "("
    * f1 -> StmList()
    * f2 -> ","
    * f3 -> Exp()
    * f4 -> ")"
    */
   public R visit(StmExp n);

}

