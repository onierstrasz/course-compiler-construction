%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 500.000000 56.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 500 56
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 500 56
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: FiraSans
%!FontType1-1.0: FiraSans 1.0000.2.0010
14 dict begin/FontName /FiraSans def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /h put
dup 34 /t put
dup 35 /p put
dup 36 /s put
dup 37 /colon put
dup 38 /slash put
dup 39 /o put
dup 40 /m put
dup 41 /e put
dup 42 /period put
dup 43 /i put
dup 44 /n put
dup 45 /g put
dup 46 /c put
dup 47 /a put
dup 48 /question put
dup 49 /r put
dup 50 /equal put
dup 51 /v put
dup 52 /l put
dup 53 /ampersand put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -678 1 index div -500 2 index div 1360 3 index div 1050 5 -1 roll div]cvx def
/sfnts [<






B800002B00BA0001000300022B00BF0001004D003F003100220014000000082BBF00020047003A002D00220014000000082BBF000300580048003800280018000000082B00BA0004000700072BB8000020457D6918444BB800605258B0011BB00059B0018E000000
00>] def
/CharStrings 24 dict dup begin
/.notdef 0 def
/ampersand 1 def
/period 2 def
/slash 3 def
/colon 4 def
/equal 5 def
/question 6 def
/a 7 def
/c 8 def
/e 9 def
/g 10 def
/h 11 def
/i 12 def
/l 13 def
/m 14 def
/n 15 def
/o 16 def
/p 17 def
/r 18 def
/s 19 def
/t 20 def
/v 21 def
/fl 22 def
/f_l 23 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-678 -500 1360 1050}def
/UniqueID 4316050 def
currentdict currentfile eexec

2066C45C9CFFAE275654BF82CACBD101CC8F0A090AF42A91B8707A6D8D9EA0A77B03605ADD761EC6AB607A11E19084AEC99823C7722C675680D23195FE69A578F9A34595E30FAE3086772C3EB03961985381B34D34F4D2B6D250476E9E72E52FF6B5467E1DE2E12FDA1A05E9FF849AB9286A3F19EF7AF8690F56A887935B8DB2161BAC1AD14152EFCBC1103E3D87422AAD01FE03088EB0527EB733200A48B85D92B7BCCD908095C9F63BE8A14E58B2CCB9B4770D54EC79CA81E4FAECC8900B7AE704887ED0A8954F9A30D0840AA2AD90C44BE52EBB0C87E011E8313E2B506CC019D3A99A3BE527F45AC92AD2C9465037568E22E0751EC31A678DE51C9A3A1AB121FD27CADA8D0A95F6A7F524899781D286105EDE38CEE6351B5DD05349A6A1719ECA9682D7D52AC9EEBF754EEC556BCAF413389E2AEE5833F6E0E437075367AF52FE6157A7123A3501746E7E03C2570BD39EC5AE1CDB68ABBB49F023BC35877B1A9EE0562A471067BB86C3B500B1ADDECBAF68B2A1E6E2DE3196B828DF6291BA54832DD110BF246E427545BF83E20989B31933BAB29497425B0124633A81D48311C23C7C5B8992B759DAAB8833C720F98A7B2C7E080040B547FFCCFED55B0368681C772C49A01511BA153C428E6BBF97156639CEB6DBE7B42D624421079F5B04F24F100142E11C14F30D23450E054B27C8767A121A99F1BA66627BE60C4881F78961E9C07727E275AA8F6C31389C39DFD4BCD86B517330F5107252C442E91E3F99831026A0361423856D37CCC0FA7D46E71DB07E4A0DB90053E8F2CB1BE3EFC3DDA1445A3FC4C10E1BAD54B57EE28268924D2AF7F4217D781D31C018D671863F86F621758F3A66208D97B086EB9A22A73682B5817487E4B62AF52F4FB9EFECFAB0444B4EF41DD7C7EE3793B1DB91F17F65CC5F050B6535269705AF9A723C7B761FE7B7400F28DEFE6E64C28575E3D2EA2620C45E362A5442C170E2EC6932F9CB4037F10E96A3DC0463104F9BCD42572D002C7B6F9E4176457A12B948A5CFA0D5AC953AFF88A5896C2C8CA1B837D13E8072EF4CF6BDCDC7C7864C35BAF937CC8F3575175630CF4BB3F869BC0BBC8E7EE123F9EC5FDDE513EAF9A5130D7BCF6B274AF0417ED731CEC1D34B3B4EE5C6CD392D6C0D1D148B6963F2284C04E0D8EB368C4B2827664894439B81C8E10B6A0257ECF49F83D924622AABDAE011326A6C27BB8BED145C3F08E047BFA27CDBB72E2DFCDAED799BF0EBFDC9638D331A5B6488B85DBA1C7E86360D0D187EA2E422D314600DAA756791CEA54AB8B39249ED31FF9128589681948877EA2A11569F5943989492E89C5EC573DF77CD6E9B9586653553A519024C7275F8C4BB005FA0574EA0D56C38FD6FF22F0ED01033A244D8CCC276D28CD7902A56B9708B2EA4BDFCA5B22CBFF12849526C49CC0B891CFAE870A2
EC6E9BF81B12BDE7562A68C8206DEF4D9316B980DB1C1F5D0B51DBB9B2F018F94DFFE67EF5E2930C80A77798F183057A36E457E9BB7D911F78FBB7658AE4A80062C1174C62F778CC1457E4DBB9AB01D4444D024FEC6E2B07194AF4B419E3AA863D13C45606598AC5420C0B0DC3CEF3C5710C6D91FCF72847A63EC76D075CDF075C688FECE56ED4265C3CB281C7E2CCEB58EA0A1BA4C19313C0C0DFD49A44A7738F5F35C58AFDCD4E93E3C674D69A4FCB82D6ED4289B368598D249C151DAAC5FF5189AB6A3BABBCB37E828138B47CC8749C8F87D58DD56D7E8A6A5EA564CC188B914295D64A66F3860D87872A138FA2B672EF842258872B3E8894E342FD503076FE96F95FC2C6AB8F820D032D00AE3B363F7AEA248AE819D73FBC27A5653AE43C617FC884E7A7731116FF24998A4050DFE8EB38DE55E11F8D75268CC2B5756FBCACA4EDDB8F8F223D7740CFFCA1F4576ECE56889CF384405F77A97F145916136CEE7EA940EDFA4EBCD524F630C1166F92CACB51B8C5B8C23850E53C89D661795FD975D6B2361778DF7983D475BF1E32B1C20E26EB4B121E7E2D1CCE5500D3EDE019C630D6B6741D2C307D70FA49EFE7E60176F7B37F5094116810A17F58168D5774FB1BE3F3DCB383E625C57346F1C259FE37658881CBBB5E69CAF42B6C58AC99AFC181B3C34B9E5F13E2C442DD88190970667607C195E67461973E016AFC2D74F370D027AD875F19CF13440D64E7CAB34A65C57E3A15132E74CCCAE39B95EE20BC9A19C7EABDA6A2F8141EAF326E4CCAF2D7E414184176926F85BC6A247C3E875FAEA2E879B3249780F9D5653B3CFADE03ED18837F7E784E0DF8845376E657352395EF64BFC150702CCC00AE35966055D3D23A11474695DAE8EC7A91DBA1A8BDC9EBD426BA8F65EACE276EA086FDE94A0140D2D00D4814C04C554913DCE4F3BB810DFB9AF8ACF0ED1D6D1CCF2F343D6B5A417A5C7490FA269930B4A548BCF99506E13ED61BD84A9986BA4CDF4631958FA9CF49C58B68856480BCCA88786589C2634C351B63E656FAB51F465A5BD80C397860EBF41AC681DEE3873678B7C18711AF144EB3E402218E9458B21255AB02658E6BEADFADF5305FCE74CF79A1D54E0156EF0EF878AE0154E7BBA7450A0283814198C7AB2505A0FFC2597794EF488747AF37798C741D72988E583AF79AD3A747F45B28EF74387C7249E59B53B4E88EEEA7C786DB3A653946990FA46FEB8FC2CA23C8EC13486F6AEB6EC2ECCA6868704157A7E5C9DFF8AABBAA0625C72BD470A79504B48F109640E7E611636ECA503AFEF4B2ECC1E6F905F74D1990EA70DFE0C7810E5F48B0670C8930B27C55D9E3E7BA7A2F6B8F7025DE374843D8016BF57E4496661F4D82CE04390D61D1E139087CA88A5B9D19A43B8F2937443FA749A22EFF6873ABE8BAD41E49DAE0286B406F14D4

7649B7C2F9A690873F77848B4FABCA39D256B3EBF35308023C85DB77E48C1DA2EFB075A385E712DE750DE4F03ABD977A77CB9BAA940D69F4511939FB1403F820DBE17A79544A6081BCEBAB238963F505C99B17024A3B5B6B11A209D63472E6ABA85E430A7BBDB3A28BFB76C7DFE739033D42374B8A9068CC74EC4D68307BE1228675A88BFD49039655FA325FCEC1B42A8952B8F07C3DA6C14C5B93A8ED89BD05845F57E6B7BA5CDD5E0825ECB1FF8297E5AD05403C48CEBB8ECCF88034855B37C068FF7ED46350A7F4D27F96DFC92B269A9EDB74953731B77AF6F4928AED523B130709D678E96FDF77C3B7F49DF36F04DA75347AE54830A9DBBBDDDA90D6F8E4EB7665B27098A528B00A045528DDB35FAD74E2C5EB2D8F6159DBC5653B331DD1C75A5ED23E5B439FC5EFAA7E81233CEA0A8A0A9782EF0DC1A8FE00769C97C9F9E88A06BB94851B286EA07AC05AB6BE2FAD303A91847961906A0CB46F52C18CBF71A3F594D10E3CB886CDAF886FA014F0E8CB1A72142FF12B7BBC187511BB8DB5467F584331CCF9468E0C3E563C4C00802C418A9C816564A473A75713AFF87331B826DF17D0A6DBAC837D2FDA0DCF4CFA7DE81F9864E03B2339722715B6745C2B4FF922D0491DFBD9F58658BD10B5F631D5DFA826E79DFF28B5E9F4AFA0D7911DF1AA544120FE92A0ED2B7B060C192139F2D26BB394535C23AFA8235868471CC7EC8B55F55AF11A82C47C82A80CDCFAB9C9D7EE59
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/FiraSans cguidfix
/F1.1/FiraSans renmfont
%RBIBeginFontSubset: HelveticaNeue-Light
%!FontType1-1.0: HelveticaNeue-Light 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Light def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /s put
dup 34 /c put
dup 35 /h put
dup 36 /e put
dup 37 /m put
dup 38 /d put
dup 39 /o put
dup 40 /a put
dup 41 /i put
dup 42 /n put
dup 43 /p put
dup 44 /t put
dup 45 /q put
dup 46 /u put
dup 47 /r put
dup 48 /y put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -430 1 index div -305 2 index div 1987 3 index div 1163 5 -1 roll div]cvx def
/sfnts [<


1BDC411B0006001B0016001B0026001B0036001B0046001B0056001B0066001B0076001B0086001B0096001B00A6001B00B6001B00C6001B000D5D410500D5001B00E5001B00025DB8000210B80025D000B800012FBA002A001300032BB8002A10BA0009002000032BB8000910303121112311232E0323220E0215141E0233323E0237331501343E0233321E0215140E0223222E0202023F020A2530371D3B573A1C1C3A573B1C3932270A02FE9D1329402D32452B13132B45322D40291302CAFED81C2A1D0E2C4B633737634B2B101D2A19620102284F3E27273E4F28284F3E27273E4F00020022FFF201F00213000A0026005FBA000B001600032BB8000B10BA000C000000032BB8000C10B8000B10B80001D0B8000C10B8001ED0B8001E2FB8000010B8001FD0B8001F2F00BA0022001B00032BB8002210BA0011000600032BB8001110BA0001000B00032BB8000110303101213E0333321E020521362E0223220E0215141E0233323637230E0123222E0201AFFEB204192A3C27263C2A17FEB3018D021837583E3D59381B1B38593D626B143F0F4E452D402A1301262343331F1F334259366951322F4D623337634B2B60583C48263A490000000001003B000001DE02CA001A0051BA001A000000032BB8001A10BA0010000D00032BB8001010B8001A10B80002D0B8001A10B80018D0B800182F00B800002FB800012FB8000E2FBA0015000800032BB8001510BA0019000100001112393031131133113E0333321E0215113311342E022322060723113B3F0117293B2626331E0C3F122C4936375C120202CAFD36012D26412F1B182A3921FEBE014C2E4A331C392F011F0002003D0000007C02CA000300070027BA0003000000032BB8000310B8000010B80004D0B8000310B80006D000B800052FB800002F303113153335071133113D3F3F3F02CA6565C6FDFC02040001003C000003050213002800D1BA0003000000032BB8000310B8000DDC410300BF000D00015D4103008F000D00015D410300EF000D00015D41050010000D0020000D00025D41030050000D00015DB80010DCB80018DC410300EF001800015D4103008F001800015D410300BF001800015D4105001000180020001800025D41030050001800015DB8001BDCBA0020000D0010111239B8000310B80026D0B800262FBA002700000003111239B8001B10B8002ADC00B800012FB8000E2FB800192FBA0023000800032BB8002310B8000810B80015D0B8002310B8001DD0303113113311343E0233321E0215113311343E023332161511331134232206072E012322060723353C3F12253B281E2A190B3F0D20362944363FAB335A170E53333F5119030204FDFC01202945331D14232F1AFEA201242443341F4340FEA5015EB53233333236305700000001003B000001DE0213001A



00>] def
/CharStrings 18 dict dup begin
/.notdef 0 def
/a 1 def
/c 2 def
/d 3 def
/e 4 def
/h 5 def
/i 6 def
/m 7 def
/n 8 def
/o 9 def
/p 10 def
/q 11 def
/r 12 def
/s 13 def
/t 14 def
/u 15 def
/y 16 def
/A.short01 17 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-430 -305 1987 1163}def
/UniqueID 4428012 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91BC64A62485D7C863002D39D4194FF17CC8AA420E752C449BD1094F4BB7311C923638A8A06632FB2DDA24B25EF203D83E3F199FB22BD45D87DBD362822AD5B564D5C24037F37B202066BE7A4E709627437EA7A37081D73A288380FC5BE7EA09C1F2A32A65EDACBF1DE44B4C39E92B0D832C8E59BF1C45A11CFD3540FEE2C5EF11C59FE9EA02DC91E9DDBDC0023C6708BE4D073833F9897F4DC6790A99CC7D0A4E2C497A39D6AE2BB4B92953943D08D315BBF199A20540D08568C626B67CF8514642DFDD6384B7300843EC789BD1E8E771DE05E4B5A2FBEE166E65B0EAAD83453A76DB82A9C2E43FD2C463F2ECD78A68534D9BFC70D3AFF28AE26EBA2374727A8F1C0EB96861F1AA4938C15844F4DA95146AFD4C70A18190401A9E768CC05D0EF4B968233C408491803C12BB7855A64A945188464266BF303E07179230B044C69FAC1FA94A8C0659F8D8CA76D134181FF040F9C112459EB2E252195B127C87BF82982DB2D96BEDD4F72859E7194AD21A8D8896F7BFA44B8DBC0441A3536E77481DCEAFF4E8F97E96AB4AF902667742C316C7D3387FA703011B383F474DDFEBCE6591E0128A94B6DF0995787459000502724BBBA1068419C0C388BAA1303B6A106B96B3B87ED08374EA03C1DC88810F2969A208F96BE4831C86F580C749C66850FD7ADA099CF6C2C78E79148259925AC5D8BF441EDDBD6ABD8758E786712971EE1CB61D3761D3D139EB1781C191CFA10D7EF53B8E37AA81C6338652A591244BF888

D96664A44F5AFAEC8FDD572DB0679E53DFAE74531E0F282B68382070AFA021A42B98556DF0E286698F82EEFD4DB4D189F6A5E38ED497B2345519511BF173560D7A08939B10D0841E5CDC2CE0CE5C3F14D8AE5EF567C759A7ACEB29BAB0A931F54248855AAFAC33A23D0134B31DC50F039AE19092DFAFB16B0F3C30597710BD58A8B290F9B66A25DD236C432E580D64D17F37E08482EF96929C381879D8242F785474F0F00E4D4429CD1DFBC26395CCF409613DA01F6A7AE344958E6797BCACAE3E69452170B7A945193685DD983ACBC9DBCF624CDF84DD488514CA21CFC3BE30453D32A2631130084363580CB1E452BB770597B53988D2D49F64837ED5830EDDCFB37E5D08135341EBDC99EF92DC234B282EDB66DFC76F6E4F887604195BAE311608699AACA3A683625C14325EC1A45CFA2E1A7923FB4B646F03C7BD7920689C67309881BD9C60752D0F05AB5995C67D3E6F4286D325FE99BBBCFCB6770449DB40488DFD912271EA9B9F9CF82E24E32ADA87AFF49B7EA8959B1C8BAA75CB6D869B56313C8AAD8A45916BC87CD530162E170A84496E82D94A02D48527EE948481FA2A642B552AC7EFFBA3A0149722229B8EE5FDD593BD824CE7EA29493329A2453AA87322047AEDFB273AE756C86803881112CEF6DE5EC8EC97F3AB1CF48FEA8E81BD52B20473FBDBD68B962C8109F3F51A085A22E103E55970AAA40C289FEE23DF5C8E3A428B674D0CD99FB4C5BDDFD571F2F1B34FC8753ADC7AFE79B76D0AE8D9BAE67AC3A6D2541E3E4179B41522208D465FDCBF988230FDF9462FB98D8CE0396DB46129A0AD4988586C9CE37D5CB2EDAB9DAB0DA6A061BF0F7EEA6D4734AEF617919DEED5018A181BCF0E30BE9575F70C519C05D4F1AF14A0FA08E3BCE27A36B296FD65D157ADA126B0ED045B5BA691D2BCCF8F33E372570687EEE7E60F831034799B2DB23630C8A7BB593000A9F4E236665C528E4F84EA0307EF2DACFECAC11976A8B11B9638AFE585BE48D36FCFA1DC172B2D65B5CFC9CD9BA1A3DA04A0335B50873226A97359DC6BD81715DE44CCFB70256F601F04B9E3F8227F4C4194B3111C428F24AB8540F10F5791BB0B29B9063AB491F51D06D4AADC67627D5F81271DC80B739266265E5B6C645499E68B171DE50FA925F379752D9E79CDD4AB07406C26CA425DE4FFAEB53A6F1C0B1BDEC2CCF17D464FC53457D80DDA73C7F8910CC2D9ECFF612096CD0DAA5A677EF30673F6FD000F03A524986B3C51F3993A97563CFF7F3A49BD5923038D2ADA8F9B9A44BBE8F44B94045FE3B07C5FE3BFBCC48D48F684146CBE2177D6186DB043B5D159284D2D5AFB39A0BDAD4C224E28DDE46343733D1B1D9218D6D2DC1254BA82CFAA64E9D559662D0415F204FC356CDBDC4F9D0CCD348BBDAEE72467CA7D1D55B6C9D5AE1BA4000AD742FF7CDFCEE29058

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Light cguidfix
/F2.1/HelveticaNeue-Light renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0 sc
q
0 0 500 56 rc
1 0 0 -1 250.0625 38 cm
/F1.1[ 16 0 0 -16 0 0]sf
-244.18401 4.5 m
(!""#$%&&$'\(\)*"!+,-*.'\(&#/"!&#/&#/"!&0#/1/\(23/45#/#/1\(23/4/4)[ 9.424000 5.872000 5.872000 9.472000 7.584000 4.240000 8.320000 8.320000 7.584000 9.344000 13.824000 8.736000 3.920000 5.872000 9.424000 4.464000 9.424000 8.416000 4.000000 7.456000 9.344000 13.824000 8.320000 9.472000 8.736000 5.872000 9.424000 8.320000 9.472000 8.736000 8.320000 9.472000 8.736000 5.872000 9.424000 8.320000 8.112000 9.472000 8.736000 5.984000 8.736000 13.824000 8.000000 7.664000 8.736000 4.640000 12.432000 9.472000 8.736000 9.472000 8.736000 6.144000 13.824000 8.000000 7.664000 8.736000 4.640000 8.736000 0.000000 ] xS
/Cs2 SC
0.940413 0.94052899 0.94033402 sc
CM
7 20 m
61 20 l
61 2 l
7 2 l
h
7 20 m
f
1 J
1 j
0.60000002 i
0.23657 0.236633 0.23652101 sc
1 0 0 -1 -74 326 cm
81 306 m
135 306 l
135 324 l
81 324 l
h
81 306 m
S
0.23529001 0.23529001 0.23529001 sc
0 i
1 0 0 -1 34 11 cm
/F2.1[ 14 0 0 -14 0 0]sf
-23.856001 5.2969513 m
(!"#$%$)[ 6.734000 7.266000 7.518000 7.266000 11.662000 0.000000 ] xS
0.940413 0.94052899 0.94033402 sc
CM
70 20 m
178 20 l
178 2 l
70 2 l
h
70 20 m
f
0.60000002 i
0.23657 0.236633 0.23652101 sc
1 0 0 -1 -74 326 cm
144 306 m
252 306 l
252 324 l
144 324 l
h
144 306 m
S
0.23529001 0.23529001 0.23529001 sc
0 i
1 0 0 -1 124 11 cm
-22.427999 5.2969513 m
(&'%\(\)*)[ 8.036000 7.784000 11.662000 7.266000 2.590000 0.000000 ] xS
0.940413 0.94052899 0.94033402 sc
CM
187 20 m
295 20 l
295 2 l
187 2 l
h
187 20 m
f
0.60000002 i
0.23657 0.236633 0.23652101 sc
1 0 0 -1 -74 326 cm
261 306 m
369 306 l
369 324 l
261 324 l
h
261 306 m
S
0.23529001 0.23529001 0.23529001 sc
0 i
1 0 0 -1 241 11 cm
-13.482 5.2969513 m
(+\(,#)[ 8.036000 7.266000 4.144000 0.000000 ] xS
0.940413 0.94052899 0.94033402 sc
CM
304 20 m
493 20 l
493 2 l
304 2 l
h
304 20 m
f
0.60000002 i
0.23657 0.236633 0.23652101 sc
1 0 0 -1 -74 326 cm
378 306 m
567 306 l
567 324 l
378 324 l
h
378 306 m
S
0.23529001 0.23529001 0.23529001 sc
0 i
1 0 0 -1 398.5 11 cm
-16.856001 5.2969513 m
(-.$/0)[ 8.036000 7.518000 7.266000 4.410000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
